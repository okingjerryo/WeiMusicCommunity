<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.test.Login">
    <select id="selLoginWithAccName" parameterType="string" resultType="Login">
        SELECT * FROM UserLogin WHERE UAName = #{thisUserName}
    </select>
    <select id="selLoginWithMailName" parameterType="string" resultType="Login">
        SELECT * FROM UserLogin WHERE UMail = #{thisUserName}
    </select>
    <select id="selLoginWithTelName" parameterType="string" resultType="Login">
        SELECT * FROM UserLogin WHERE UTel = #{thisUserName}
    </select>
    <select id="selLoginWithUUuid" parameterType="string" resultType="Login">
        select * from UserLogin WHERE UUuid = #{UUuid};
    </select>
    <insert id="registeUser" parameterType="Login" flushCache="true">
        INSERT INTO UserLogin (UUuid,UPwd,UAName,UTel,UMail)
        VALUES (#{UUuid},#{UPwd},#{UAName},#{UTel},#{UMail})
    </insert>

    <insert id="insertFreqTOWork" parameterType="UserTFWork" flushCache="true">
        INSERT INTO UserWork (UWid,UUuid,WorkId,isFreq)
        VALUES (#{UWid},#{UUuid},#{WorkId},#{isFreq})
    </insert>
    <insert id="regist_insertUserExtend" parameterType="UserExtend" flushCache="true" >
        INSERT INTO UserExtend (UUuid,UNackName,USex,UBirthday,USign,UHeadImg)
        VALUES (#{UUuid},#{UNackName},#{USex},#{UBirthday},#{USign},#{UHeadImg})
    </insert>

    <update id="update_LoginAll" parameterType="Login" flushCache="true">
        UPDATE UserLogin set UPwd=#{UPwd},UAName=#{UAName},UTel=#{UTel},UMail=#{UMail} WHERE UUuid = #{UUuid}
    </update>
    <select id="selUserExtendByUUuid" parameterType="string" resultType="UserExtend">
        SELECT * FROM UserExtend WHERE UUuid = #{thisUUid}
    </select>
    <update id="update_userExtendAll" parameterType="UserExtend" flushCache="true">
        UPDATE UserExtend set UNackName = #{UNackName},USex = #{USex},UBirthday = #{UBirthday},UTag = #{UTag},USign = #{USign},UHeadImg = #{UHeadImg}
        WHERE UUuid = #{UUuid}
    </update>
    <select id="sel_userTFWorkByUUuid" parameterType="string" resultType="UserTFWork">
        SELECT * FROM userworkview WHERE UUuid = #{UUuid}
    </select>
    <update id="update_ALineofTFWork" parameterType="UserTFWork" flushCache="true">
        UPDATE UserWork set WorkId = #{WorkId},isFreq = #{isFreq},status = #{status},delayTime = #{delayTime}
        WHERE UWid = #{UWid}
    </update>
    <delete id="delete_ALineofTFWork" parameterType="string" flushCache="true">
        DELETE FROM UserWork WHERE UWid = #{UWid}
    </delete>

    <select id="sel_CommityInfoByCName" parameterType="string" resultType="CommityInfo">
        SELECT * FROM CommityInfo WHERE CName = #{CName}
    </select>
    <insert id="insert_CommityInfo" parameterType="CommityInfo" flushCache="true">
        INSERT INTO CommityInfo (CId, CName, Cintroduce,CCreateTime, CTag, CHeadImg, CNMDemand, CMeMCount)
        VALUES (#{Cid},#{CName},#{Cintroduce},#{CCreateTime},#{CTag},#{CHeadImg},#{CNMDemand},0)
    </insert>
    <insert id="insert_CommityMember" parameterType="CommityMember" flushCache="true">
        INSERT INTO CommityMember (CMid, CId,UJoinTime, UUuid, Utype)
        VALUES (#{CMid},#{Cid},#{UJoinTime},#{UUuid},#{Utype})
    </insert>
    <select id="sel_CommityMemCount" parameterType="string" resultType="int">
        SELECT CMeMCount FROM CommityInfo WHERE CId = #{Cid}
    </select>
    <update id="update_CommmityMeMCount" parameterType="CommityInfo" flushCache="true">
        UPDATE CommityInfo SET CMeMCount = #{CMeMCount}
        WHERE CId = #{Cid}
    </update>
    <select id="sel_CommityUserByCId" parameterType="string" resultType="CommityMember">
        SELECT * FROM sel_commitymemview WHERE CId = #{Cid}
    </select>
    <select id="sel_CommityOneUserByCM" parameterType="CommityMember" resultType="CommityMember">
        SELECT * FROM CommityMember WHERE CId = #{Cid} AND UUuid = #{UUuid}
    </select>
    <update id="update_CommityMemType" parameterType="CommityMember" flushCache="true">
        UPDATE CommityMember SET Utype = #{Utype} WHERE UUuid = #{UUuid}
    </update>
    <delete id="del_CommityMem" parameterType="CommityMember" flushCache="true">
        DELETE FROM CommityMember WHERE CId = #{Cid} AND UUuid = #{UUuid}
    </delete>
    <select id="sel_CommityInfoByCid" parameterType="string" resultType="CommityInfo">
        SELECT *
        FROM CommityInfo
        WHERE CId = #{Cid}
    </select>
    <update id="update_CommityNotice" parameterType="CommityInfo" flushCache="true">
        UPDATE CommityInfo SET CNotice = #{CNotice},CNoteCTime = #{CNoteCTime}
        WHERE CId = #{Cid}
    </update>
    <insert id="insert_CommityActive" parameterType="CommityActive" flushCache="true">
        INSERT INTO CommityActive (CAId, Cid, CAStartTime, CAEndTime, CATitle, CAThings, CACreatUserId, CAImgPath)
        VALUES
            (CAId = #{CAId}, Cid = #{Cid}, CAStartTime = #{CAStartTime}, CAEndTime = #{CAEndTime}, CATitle = #{CATitle},
             CAThings = #{CAThings},
             CACreatUserId = #{CACreatUserId}, CAImgPath = #{CAImgPath})
    </insert>
    <update id="update_CommityInfo" parameterType="CommityInfo" flushCache="true">
        UPDATE CommityInfo
        SET CName = #{CName},CCreateTime = #{CCreateTime},Cintroduce = #{Cintroduce},CTag = #{CTag},CHeadImg =
        #{CHeadImg},CIsNMin = #{CIsNMin},CNMDemand = #{CNMDemand},
        CNotice = #{CNotice},CNoteCTime = #{CNoteCTime}
        WHERE CId = #{Cid}
    </update>
    <select id="sel_CommityMemByCMId" parameterType="string" resultType="CommityMember">
        SELECT *
        FROM sel_commitymemview
        WHERE CMid = #{CMId}
    </select>
    <select id="sel_getAllWork" resultType="Work">
        SELECT *
        FROM Work
    </select>
    <insert id="insert_ProjectCreate" parameterType="ProjectInfo" flushCache="true">
        INSERT INTO ProjectInfo (PId, CId, CreatUUuid, PTitle, PIntroduce, PCreatTime, PState, PType)
        VALUES (#{PId},#{CId},#{CreatUUuid},#{PTitle},#{PIntroduce},#{PCreatTime},#{PState},#{PType})
    </insert>
    <insert id="insert_ProjectWork" parameterType="ProjectWork" flushCache="true">
        INSERT INTO ProjectWork (PWId, PId, UWid, UJoinTime)
        VALUES (#{PWId},#{PId},#{UWid},#{UJoinTime})
    </insert>
    <select id="sel_ProjectDynAfterIn" parameterType="ProjectDynamic" resultType="ProjectDynamic">
        SELECT *
        FROM sel_ProjectDynWithNoFile
        WHERE PDId = #{PDId}
    </select>
    <update id="insert_DynWord" parameterType="ProjectDynamic" flushCache="true">
        UPDATE ProjectDynamic
        SET Word = #{Word}
        WHERE PDId = #{PDId}
    </update>
    <select id="sel_getAllCommityProject" parameterType="ProjectInfo" resultType="ProjectInfo">
        SELECT *
        FROM sel_ProjectInfo
        WHERE CId = #{CId} AND PState BETWEEN #{startState} AND #{endState}
    </select>
    <select id="sel_OneProjectDetail" parameterType="ProjectInfo" resultType="ProjectInfo">
        SELECT * FROM sel_ProjectInfo WHERE PId = #{PId}
    </select>
    <select id="sel_getAllOPProject" parameterType="ProjectInfoPersonalOriented"
            resultType="ProjectInfoPersonalOriented">
        SELECT *
        FROM sel_ProjectInfoPO
        WHERE UUuid = #{thisUUuid} AND PState BETWEEN #{startState} AND #{endState}
    </select>
    <select id="sel_getAllCommityMemL" parameterType="CommityInfo" resultType="UserExtend">
        SELECT UNackName,USex,UBIrthday,UTag,USign,UHeadImg,UUuid FROM sel_CommityMemList WHERE CId = #{Cid}
    </select>
    <select id="sel_AllUWorkByUuid" parameterType="Login" resultType="UserExtend">
        SELECT * FROM userworkview WHERE UUuid = #{UUuid}
    </select>
    <select id="sel_getPersonalInfoOne" parameterType="Login" resultType="PersonalInfoPersonalOriented">
        SELECT * FROM sel_PersonalInfoPO WHERE UUuid = #{UUuid}
    </select>
    <select id="sel_UserWorkbyProjectWork" parameterType="ProjectWork" resultType="UserTFWork">
        SELECT * FROM userworkview WHERE UUuid = #{UUuid} AND WorkSC = #{WorkSC}
    </select>
    <insert id="insert_ProjectWrokApply" parameterType="ProjectWork" flushCache="true">
        INSERT INTO ProjectWork(PWId, PId, UWid)
        VALUES (#{PWId},#{PId},#{UWid})
    </insert>
    <select id="sel_ProjectWorkApplyMsg" parameterType="ProjectWork" resultType="ProjectWorkApplyMsg">
        SELECT * FROM sel_ProjectWorkApplicateMsg WHERE PWId = #{PWId}
    </select>
    <insert id="insert_ProjectWorkApply" parameterType="MessageBox" flushCache="true">
        INSERT INTO MessageBox (MId, MCreateTime, MSenderId, MTarId, MTitle, MThings, MIsReaded, MCheck, MSpcId,
        MSenderType)
        VALUES
        (#{MId},#{MCreateTime},#{MSenderId},#{MTarId},#{MTitle},#{MThings},#{MIsReaded},#{MCheck},#{MSpcId},#{MSenderType})
    </insert>
    <update id="update_applyPJoinApply" parameterType="ProjectWork" flushCache="true">
        UPDATE ProjectWork
        SET UApply = 1
        WHERE PWId = #{PWId}
    </update>
    <select id="selOneProjectWork" parameterType="ProjectWork" resultType="ProjectWork">
        SELECT PWId,PId,UWid,UJoinTime,UApply,WorkSC FROM sel_ProjectWorkApplicateMsg WHERE PWId = #{PWId}
    </select>
    <select id="sel_OtherWorkApply" parameterType="ProjectWork" resultType="ProjectWork">
        SELECT * FROM sel_ProjectWorkApplicateMsg WHERE PId = #{PId} AND WorkSC = #{WorkSC} AND PWId != #{PWId}
    </select>
    <select id="sel_MsgByRelativeId" parameterType="string" resultType="MessageBox">
        SELECT * FROM MessageBox WHERE MSenderId = #{thisRelativeId}
    </select>
    <delete id="del_ProjectMemApply" parameterType="ProjectWork" flushCache="true">
        DELETE FROM ProjectWork WHERE PWId = #{PWId}
    </delete>
    <update id="update_MsgCheck" parameterType="MessageBox" flushCache="true">
        UPDATE MessageBox
        SET MCheck = #{MCheck}
        WHERE MId = #{MId}
    </update>
    <select id="sel_getOneMail" parameterType="MessageBox" resultType="MessageBox">
        SELECT * FROM MessageBox WHERE MId = #{MId}
    </select>
    <insert id="insert_SendMessage" parameterType="MessageBox" flushCache="true">
        INSERT INTO MessageBox (MId, MCreateTime, MSenderId, MTarId, MTitle, MThings, MIsReaded, MCheck, MSpcId,
        MSenderType)
        VALUES
        (#{MId},#{MCreateTime},#{MSenderId},#{MTarId},#{MTitle},#{MThings},#{MIsReaded},#{MCheck},#{MSpcId},#{MSenderType})
    </insert>
    <select id="sel_checkProjectCanDo" parameterType="ProjectWork" resultType="int">
        SELECT count(*) FROM ProjectWork WHERE PId = #{PId} AND UApply = 1
    </select>
    <update id="update_ProjectState" parameterType="ProjectInfo" flushCache="true">
        UPDATE ProjectInfo SET PState = #{PState} WHERE PId = #{PId}
    </update>
    <insert id="insert_Dyn" parameterType="ProjectDynamic" flushCache="true">
        INSERT INTO ProjectDynamic (PDId, Time, PWId, PFId, PDType)
        VALUES(#{PDId},#{Time},#{PWId},#{PFId},#{PDType})
    </insert>
    <select id="sel_UserWorkByUUidandWid" parameterType="UserTFWork" resultType="UserTFWork">
        SELECT * FROM UserWork WHERE UUuid = #{UUuid} AND WorkId = #{WorkId}
    </select>
    <select id="sel_CommityInfoPO" parameterType="Login" resultType="CommityInfoPersonalOriented">
        SELECT * FROM sel_CommityInfoPO WHERE UUuid = #{UUuid}
    </select>
    <select id="sel_getAllMailPO" parameterType="Login" resultType="MessageBox">
        SELECT * FROM MessageBox WHERE MTarId = #{UUuid} AND MIsReaded = 0
    </select>
    <select id="sel_AllProjectInfoPO" parameterType="Login" resultType="ProjectInfoPersonalOriented">
        SELECT *
        FROM sel_ProjectInfoPO
        WHERE UUuid = #{UUuid} AND PState BETWEEN 1 AND 4
    </select>
    <update id="update_UserInfoPO_UE" parameterType="PersonalInfoPersonalOriented" flushCache="true">
        UPDATE UserExtend
        SET UNackName = #{UNackName}, USex = #{USex}, UBirthday = #{UBirthday}, USign = #{USign}, UHeadImg = #{UHeadImg}
        WHERE UUuid = #{UUuid}
    </update>
    <update id="update_UserInfoPO_LS" parameterType="PersonalInfoPersonalOriented" flushCache="true">
        UPDATE UserLogin
        SET UAName = #{UAName}, UTel = #{UTel}, UMail = #{UMail}
        WHERE UUuid = #{UUuid}
    </update>
    <select id="sel_getExistFileCount" parameterType="ProjectFile" resultType="int">
        SELECT count(*)
        FROM ProjectFile
        WHERE PWId = #{PWId}
    </select>
    <select id="sel_getFileOldest" parameterType="ProjectFile" resultType="ProjectFile">
        SELECT *
        FROM ProjectFile
        WHERE PWId = #{PWId}
        ORDER BY PFCreateTime ASC
    </select>
    <delete id="del_oldestFile" parameterType="ProjectFile">
        DELETE FROM ProjectFile
        WHERE PFId = #{PFId}
    </delete>
    <insert id="insert_ProjectFile" parameterType="ProjectFile" flushCache="true">
        INSERT INTO ProjectFile (PFId, PFPath, PWId, PFCreateTime, PFNotice)
        VALUES (#{PFId}, #{PFPath}, #{PWId}, #{PFCreateTime}, #{PFNotice})
    </insert>
</mapper>